<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:custom="clr-namespace:MauiLabs.View.Commons.ContentViews"
             xmlns:system="clr-namespace:System;assembly=netstandard"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="MauiLabs.View.Pages.ProfilePages.RegistrationPage"
             IconImageSource="/Profile/registration.png"
             Title="Регистрация" Shell.BackgroundColor="{x:StaticResource Key=FirstColor}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <toolkit:InvertedBoolConverter x:Key="InvertedBoolConverter" />
            <toolkit:ByteArrayToImageSourceConverter x:Key="ByteArrayToImageConverter" />
            <Style x:Key="ButtonStyle" TargetType="Button">
                <Setter Property="CornerRadius" Value="16" />
                <Setter Property="BackgroundColor" Value="{x:StaticResource Key=FirstColor}" />
                <Setter Property="BorderColor" Value="White" />
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="BorderWidth" Value="2" />
            </Style>
            <Style x:Key="TextFieldStyle" TargetType="Entry">
                <Setter Property="PlaceholderColor" Value="{x:StaticResource Key=FirstColor}"/>
                <Setter Property="BackgroundColor" Value="White" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="TextColor" Value="{x:StaticResource Key=SecondColor}" />
            </Style>
            <Style x:Key="ImagePickerStyle" TargetType="Button">
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="BackgroundColor" Value="White" />
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="TextColor" Value="{x:StaticResource FirstColor}"/>
            </Style>
            <Style x:Key="ImageClearStyle" TargetType="ImageButton">
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="BorderColor" Value="White"/>
                <Setter Property="BorderWidth" Value="2"/>
                <Setter Property="Source" Value="clearicon.png"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="BackgroundColor" Value="{x:StaticResource FirstColor}"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <Grid>
        <Image Source="background.png" Aspect="AspectFill"/>
        <ScrollView Orientation="Vertical" BackgroundColor="Transparent" x:Name="PageScroller"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}">
            <StackLayout x:Name="RegisterPanel" Opacity="0.0" Scale="1.5" Orientation="Vertical" HorizontalOptions="Fill" Margin="30, 50" >
                <Label HorizontalTextAlignment="Center" TextColor="White" FontSize="26" FontAttributes="Bold" 
                       HorizontalOptions="Center" WidthRequest="300">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Регистрация профиля" TextColor="White"/>
                            <Span Text="{x:Static system:Environment.NewLine}"/>
                            <Span Text="Нового пользователя" TextColor="{x:StaticResource FirstColor}" TextDecorations="Underline"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <FlexLayout AlignItems="Stretch" HorizontalOptions="Center" Direction="Column">
                    <Border StrokeThickness="2" MaximumWidthRequest="400" Padding="30"
                            BackgroundColor="{x:StaticResource Key=FirstColor}" Margin="0, 20, 0, 20"
                            FlexLayout.AlignSelf="Stretch">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="20" />
                        </Border.StrokeShape>
                        <Border.Stroke>
                            <SolidColorBrush Color="White" />
                        </Border.Stroke>

                        <VerticalStackLayout Spacing="10">
                            <custom:ValidationEntryView x:Name="LoginTextField" ErrorText="Значение от 5 до 50 символов"
                                    IsValidated="{x:Binding ValidationState[Login]}" TextValue="{x:Binding UserLogin}"
                                    CanInput="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"
                                    DefaultText="Укажите логин" LabelText="Логин:" />

                            <custom:ValidationEntryView x:Name="PasswordTextField" ErrorText="Значение от 5 до 50 символов"
                                    IsValidated="{x:Binding ValidationState[Password]}" TextValue="{x:Binding UserPassword}"
                                    CanInput="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"
                                    DefaultText="Укажите пароль" LabelText="Пароль:" IsHidden="True"/>
                        </VerticalStackLayout>

                    </Border>
                    <Border StrokeThickness="2" MaximumWidthRequest="400" Padding="30"
                            BackgroundColor="{x:StaticResource Key=FirstColor}" Margin="0, 0, 0, 20"
                            FlexLayout.AlignSelf="Stretch">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="20" />
                        </Border.StrokeShape>
                        <Border.Stroke>
                            <SolidColorBrush Color="White" />
                        </Border.Stroke>

                        <VerticalStackLayout Spacing="10">
                            <custom:ValidationEntryView x:Name="NameTextField" ErrorText="Значение от 4 до 50 символов"
                                    IsValidated="{x:Binding ValidationState[UserName]}" TextValue="{x:Binding UserName}"
                                    CanInput="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"
                                    MinLenght="4" DefaultText="Укажите имя" LabelText="Имя пользователя:" />

                            <custom:ValidationEntryView x:Name="SurnameTextField" ErrorText="Значение от 4 до 50 символов"
                                    IsValidated="{x:Binding ValidationState[Surname]}" TextValue="{x:Binding UserSurname}"
                                    CanInput="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"
                                    MinLenght="4" DefaultText="Укажите фамилию" LabelText="Фамилия пользователя:" />

                            <BoxView BackgroundColor="White" Margin="5, 14" CornerRadius="1" HeightRequest="2"/>

                            <custom:ValidationEntryView x:Name="EmailTextField" ErrorText="Значение от 5 до 100 символов"
                                    IsValidated="{x:Binding ValidationState[Email]}" TextValue="{x:Binding UserEmail}"
                                    CanInput="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"
                                    MaxLenght="100" Regex="^([\w\.\-]{4,})@([\w\-]+)((\.(\w){2,3})+)$"
                                    DefaultText="Пример: test@gmail.com" LabelText="Электронная почта:" />
                            <custom:ExpanderView ButtonIcon="arrowicon.png" ExpanderHeight="240" ButtonText="Изображение профиля"
                                    Margin="0, 10, 0, 0" x:Name="Expander" 
                                    CanExpand="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}">
                                <custom:ExpanderView.Item>
                                    <Border BackgroundColor="Transparent">
                                        <FlexLayout Grid.Row="0" Grid.Column="0"
                                                JustifyContent="Center" AlignItems="Center" Direction="Column" HeightRequest="220" >
                                            <Border HeightRequest="112" WidthRequest="112" Stroke="White" StrokeThickness="2"
                                                    BackgroundColor="White">
                                                <Border.StrokeShape>
                                                    <RoundRectangle CornerRadius="20" />
                                                </Border.StrokeShape>
                                                <Image 
                                                    Aspect="AspectFill" HeightRequest="{Binding ImageSize}" WidthRequest="{Binding ImageSize}"
                                                    Source="{Binding PreviewImage, Converter={x:StaticResource ByteArrayToImageConverter}}"/>
                                            </Border>
                                            <Border BackgroundColor="Transparent" Margin="0, 4">
                                                <Grid ColumnDefinitions="*, Auto">
                                                    <Button Grid.Column="0" Command="{x:Binding ImagePickerCommand}" Text="Выбрать"
                                                            Style="{x:StaticResource ImagePickerStyle}" HeightRequest="40" WidthRequest="140"
                                                            IsEnabled="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"/>
                                                    <ImageButton Grid.Column="1" WidthRequest="50" HeightRequest="50"
                                                            Command="{x:Binding ImageClearCommand}" Style="{x:StaticResource ImageClearStyle}" 
                                                            IsEnabled="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"/>
                                                </Grid>
                                            </Border>
                                        </FlexLayout>
                                    </Border>
                                </custom:ExpanderView.Item>
                            </custom:ExpanderView>
                        </VerticalStackLayout>
                    </Border>
                    <Button x:Name="RegisterButton" Clicked="RegisterButton_Clicked"
                            FlexLayout.AlignSelf="Stretch" Text="Зарегистрироваться" HeightRequest="60" MaximumWidthRequest="400"
                            Style="{x:StaticResource Key=ButtonStyle}" Command="{Binding RegistrationCommand}"
                            IsEnabled="{Binding IsLoading, Converter={StaticResource InvertedBoolConverter}}"/>
                </FlexLayout>
            </StackLayout>
        </ScrollView>
        <custom:LoadingContentView IsLoading="{x:Binding IsLoading}" CancelCommand="{x:Binding CancelCommand}"/>
    </Grid>
</ContentPage>